name: ci

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: [self-hosted, linux]
    permissions:
      contents: write
    # 1. Adicionamos a seção 'outputs' para exportar a tag
    outputs:
      tag: ${{ steps.vars.outputs.SHORT_SHA }}
    
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get short SHA
        id: vars # O 'id' é crucial para referenciar o output
        run: |
          SHA=$(git rev-parse --short=7 HEAD)
          echo "SHORT_SHA=$SHA" >> "$GITHUB_OUTPUT"

      - name: Build and push
        # Usamos a saída do step 'vars' diretamente aqui
        run: |
          docker build -t duarpax18/python-app:latest -t duarpax18/python-app:${{ steps.vars.outputs.SHORT_SHA }} .
          docker push duarpax18/python-app:latest
          docker push duarpax18/python-app:${{ steps.vars.outputs.SHORT_SHA }}
      
  deploy-dev:
    runs-on: [self-hosted, linux]
    permissions:
      contents: write
    needs: build-and-push # Depende do primeiro job

    steps:
      # 2. Adicionamos o checkout para ter acesso aos arquivos
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update Helm chart and push to Git
        env:
          # 3. Usamos o 'output' do job anterior
          NEW_IMAGE_TAG: ${{ needs.build-and-push.outputs.tag }}
        run: |
          echo "Updating image tag to ${{ env.NEW_IMAGE_TAG }}"

          # Configurar o Git
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Atualizar o arquivo values.yaml
          sed -i "s/^\(\s*tag:\s*\).*/\\1\"${NEW_IMAGE_TAG}\"/" charts/python-app/values.yaml
          
          echo "charts/python-app/values.yaml after update:"
          cat charts/python-app/values.yaml

          # Fazer commit e push
          git add charts/python-app/values.yaml
          git commit -m "ci: Update python-app image to tag ${{ env.NEW_IMAGE_TAG }}"
          git push
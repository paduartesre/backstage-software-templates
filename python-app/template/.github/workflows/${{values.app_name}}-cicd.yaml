name: ${{values.app_name}}-cicd

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: [self-hosted, linux]
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.vars.outputs.SHORT_SHA }}
    
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ '${{ vars.DOCKERHUB_USERNAME }}' }}
          password: ${{ '${{ secrets.DOCKERHUB_TOKEN }}' }}

      - name: Get short SHA
        id: vars
        run: |
          SHA=$(git rev-parse --short=7 HEAD)
          echo "SHORT_SHA=$SHA" >> "$GITHUB_OUTPUT"

      - name: Build and push
        run: |
          docker build -t duarpax18/python-app:latest -t duarpax18/python-app:${{ '${{ steps.vars.outputs.SHORT_SHA }}' }} .
          docker push duarpax18/python-app:latest
          docker push duarpax18/python-app:${{ '${{ steps.vars.outputs.SHORT_SHA }}' }}
      
  deploy-dev:
    runs-on: [self-hosted, linux]
    permissions:
      contents: write
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update Helm chart and push to Git
        env:
          NEW_IMAGE_TAG:${{ '${{ needs.build-and-push.outputs.tag }}' }}
        run: |
          echo "Updating image tag to ${{ '${{ env.NEW_IMAGE_TAG }}' }}"

          # Configurar o Git
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Atualizar o arquivo values.yaml
          sed -i "s/^\(\s*tag:\s*\).*/\\1\"${NEW_IMAGE_TAG}\"/" charts/${{ values.app_name }}/values-${{values.app_env}}.yaml
          
          echo "charts/${{ values.app_name }}/values-${{ values.app_env }}.yaml after update:"
          cat charts/${{ values.app_name }}/values-${{ values.app_env }}.yaml

          # Fazer commit e push
          git add charts/${{ values.app_name }}/values-${{ values.app_env }}.yaml
          git commit -m "ci: Update python-app image to tag ${{ '${{ env.NEW_IMAGE_TAG }}' }}"
          git push

      # - name: Install ArgoCD CLI
      #   uses: argoproj/argo-cd-action@v2
      #   with:
      #     install-cli: true

      # - name: Login to ArgoCD
      #   run: |
      #     argocd login localhost:8282 --username ${{ '${{ vars.ARGOCD_USERNAME }}' }} --password ${{ '${{ secrets.ARGOCD_PASSWORD }}' }} --insecure --grpc-web

      # - name: ArgoCD Create App
      #   run: |
      #     argocd app create ${{ values.app_name }}-${{ values.app_env }} --repo https://github.com/duarpax18/backstage-software-templates.git --path charts/${{ values.app_name }} --dest-server https://kubernetes.default.svc --dest-namespace ${{ values.app_name }}-${{ values.app_env }} --sync-policy automated --self-heal --revision master --prune --allow-empty --values-file charts/${{ values.app_name }}/values-${{ values.app_env }}.yaml

      # - name: ArgoCD Sync
      #   run: |
      #     argocd app sync ${{ values.app_name }}-${{ values.app_env }}

      # - name: ArgoCD Wait for Sync